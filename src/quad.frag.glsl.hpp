static const char *g_shader_fragment_quad = ""
#if defined(USE_LD)
"quad.frag.glsl"
#else
"#version 430\n"
"layout(location=0)uniform sampler2D surface_texture;"
"layout(location=1)uniform sampler3D noise_volume;"
"layout(location=2)uniform vec3[10] e;"
"mat3 v=mat3(.42,-.7,.58,.53,.71,.46,-.74,.12,.67);"
"out vec4 output_color;"
"vec4 m=vec4(.3,.0,.7,.009);"
"vec3 i=normalize(vec3(2.,.5,-1.));"
"float g=e[9].g;"
"bool world_toggle=1.<abs(e[7].b);"
"float f(vec3 point)"
"{"
"float t,bb,o,dd;"
"vec3 r,ii,jj,kk;"
"if(world_toggle)"
"{"
"r=point*.02;"
"vec4 e=vec4(r,1.);"
"for(int iter=0;"
"iter<9;"
"++iter)"
"{"
"e.rgb=clamp(e.rgb,-1.,1.)*2.-e.rgb;"
"o=dot(e.rgb,e.rgb);"
"e*=clamp(max(.824/o,.824),.0,1.);"
"e=e*vec4(vec3(-2.742),2.742)+vec4(r,1.);"
"}"
"e.rgb*=clamp(r.g+1.,.1,1.);"
"o=((length(e.rgb)-3.259)/e.a-.001475)*50.;"
"}"
"else"
"{"
"r=v*point*.007;"
"ii=v*r*2.61;"
"jj=v*ii*2.11;"
"kk=v*jj*2.11;"
"t=texture(surface_texture,r.rb).r*2.61;"
"bb=texture(surface_texture,ii.rb).r*1.77;"
"o=texture(surface_texture,jj.rb).r*.11;"
"dd=texture(surface_texture,kk.rb).r*.11;"
"t=dd+o+pow(t,2.)+pow(bb,2.);"
"o=length(point.rb)*.3;"
"o=t*(smoothstep(.0,.5,o*.0025)+.5)+point.g-6.*((sin(clamp(pow(o/10.,1.8)-3.14/2.,-1.57,1.57))-1.)*2.+5.)*cos(clamp(.04*o,.0,3.14));"
"}"
"t=length(point-e[8].rgb);"
"if(t<g)return o+g-t;"
"return o;"
"}"
"float raycast(vec3 o,vec3 direction,float interval,out vec3 out_point,out vec3 out_normal)"
"{"
"vec3 e,mid_point;"
"float prev_value=f(o),current_value,mid_value,ii=1.;"
"for(;"
"ii>.0;"
"ii-=interval)"
"{"
"e=o+direction*max(prev_value*m.b,.02);"
"current_value=f(e);"
"if(.0>current_value)"
"{"
"for(int jj=0;"
"jj<5;"
"++jj)"
"{"
"mid_point=(o+e)*.5;"
"mid_value=f(mid_point);"
"if(.0>mid_value)"
"{"
"e=mid_point;"
"current_value=mid_value;"
"}"
"else"
"{"
"o=mid_point;"
"prev_value=mid_value;"
"}"
"}"
"out_normal=normalize(vec3(f(e.rgb+m.rgg).r,f(e.rgb+m.grg).r,f(e.rgb+m.ggr).r)-current_value);"
"break;"
"}"
"o=e;"
"prev_value=current_value;"
"}"
"out_point=o;"
"return ii;"
"}"
"float intersect_sphere(inout vec3 point,vec3 direction,vec3 center,float radius)"
"{"
"vec3 diff=point-center;"
"float ee=dot(diff,diff)-radius*radius,aa=dot(diff,direction);"
"if(0>ee||0>aa)"
"{"
"ee=aa*aa-ee;"
"if(0<ee)"
"{"
"point+=max(-aa-sqrt(ee),.0)*direction;"
"return length(aa*direction-diff);"
"}"
"}"
"return .0;"
"}"
"vec3 sample_noise(vec3 point)"
"{"
"vec3 aa,bb,cc,hh,ii,jj;"
"hh=v*point;"
"ii=v*hh*3.;"
"jj=v*ii*3.;"
"aa=(texture(noise_volume,hh).rgb-.5)*2.*.6;"
"bb=(texture(noise_volume,ii).rgb-.5)*2.*.3;"
"cc=(texture(noise_volume,jj).rgb-.5)*2.*.1;"
"return normalize(aa+bb+cc);"
"}"
"void main()"
"{"
"vec2 pixcoord=gl_FragCoord.xy/360.-vec2(1.78,1.);"
"vec3 c=mix(mix(e[0],e[1],e[7].g),mix(e[1],e[2],e[7].g),e[7].g)*3.,o=normalize(mix(e[3],e[4],e[7].g)),r=mix(e[5],e[6],e[7].g),t=normalize(cross(o,r)),normal,a;"
"r=normalize(cross(t,o));"
"o=normalize(o+pixcoord.r*t+pixcoord.g*r);"
"r=vec3(0);"
"float l,tmp2;"
"t=vec3(109.,14.,86.);"
"if(0<int(e[7].b)%2&&.0<intersect_sphere(c,o,t,9.))"
"{"
"o=normalize(o+reflect(-o,normalize(c-t))*.2);"
"g=-.2;"
"world_toggle=!world_toggle;"
"}"
"if(world_toggle)m=vec4(.05,.0,.98,.022);"
"tmp2=raycast(c,o,m.a,a,normal);"
"if(.0<tmp2)"
"{"
"if(world_toggle)r=max(dot(i,normal),.0)*mix(vec3(.3,.6,.9),vec3(1),smoothstep(-24.,9.,a.g))+pow(max(dot(o,reflect(i,normal)),.0),7.)*.11;"
"else"
"{"
"l=raycast(a+i*.5,i,m.a*3.,r,r);"
"r=(1.-l)*(max(dot(i,normal),.0)*mix(vec3(.8,.6,.4),vec3(1),smoothstep(-24.,9.,a.g))+pow(max(dot(o,reflect(i,normal)),.0),7.)*.11);"
"}"
"t=a-e[8];"
"l=g+.5-length(t);"
"if(0<l)r+=vec3((dot(sample_noise(a*.009),normalize(t))*.1)+.1,-.05,-.05)*smoothstep(.0,.5,l);"
"}"
"vec3 fog=mix(vec3(.9,.8,.8),vec3(.8,.8,.9),o.g*111.*.02)*(dot(sample_noise(c*.006+o*.1),o)*smoothstep(-.2,.5,-o.g)*.2+.8);"
"if(world_toggle)tmp2=smoothstep(.0,.4,tmp2);"
"output_color=vec4(mix(mix(fog,vec3(1),pow(max(dot(o,i),.0),7.)),r,tmp2),1.)-(int(gl_FragCoord.y*.5)%2+.1)*(max(max(smoothstep(.98,1.,e[7].g),smoothstep(-.02*e[9].r,.0,-e[7].g)*e[9].r),.1)+g*.02)*dot(pixcoord,pixcoord);"
"t=c;"
"l=intersect_sphere(t,o,e[8],g+.2);"
"if(.0<l)output_color.rgb-=clamp(1.-(dot(t-c,t-c)-dot(a-c,a-c))*.003,.0,1.)*(1.-pow(l/g,5))*(dot(sample_noise((t-e[8])*.009),o)*.1+.9);"
"}"
#endif
"";
